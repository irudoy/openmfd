/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#include <gui_generated/containers/SingleGaugeBase.hpp>
#include <BitmapDatabase.hpp>
#include <texts/TextKeysAndLanguages.hpp>
#include <touchgfx/Color.hpp>

SingleGaugeBase::SingleGaugeBase()
{
    setWidth(160);
    setHeight(173);
    gauge_arc.setPosition(20, 18, 114, 114);
    gauge_arc.setCenter(57, 57);
    gauge_arc.setStartEndAngle(-180, 90);
    gauge_arc.setRange(0, 100);
    gauge_arc.setValue(0);
    gauge_arc.setEasingEquation(touchgfx::EasingEquations::quadEaseInOut);
    gauge_arc.setArcVisible();
    gauge_arcPainter.setBitmap(touchgfx::Bitmap(BITMAP_VALUE_ID));
    gauge_arc.getArc().setPainter(gauge_arcPainter);
    gauge_arc.getArc().setRadius(57);
    gauge_arc.getArc().setLineWidth(0);

    bg.setPosition(22, 20, 118, 138);

    gauge_bg_spec_1.setXY(0, 0);
    gauge_bg_spec_1.setVisible(false);
    gauge_bg_spec_1.setBitmap(touchgfx::Bitmap(BITMAP_METER_UNIT_SPEC_1_ID));
    bg.add(gauge_bg_spec_1);

    gauge_bg.setXY(0, 0);
    gauge_bg.setBitmap(touchgfx::Bitmap(BITMAP_METER_UNIT_ID));
    bg.add(gauge_bg);

    scales.setPosition(23, 21, 110, 110);

    scale_spec_1.setXY(0, 0);
    scale_spec_1.setVisible(false);
    scale_spec_1.setBitmap(touchgfx::Bitmap(BITMAP_SCALES_SPEC_1_ID));
    scales.add(scale_spec_1);

    scale_11_21.setXY(0, 0);
    scale_11_21.setVisible(false);
    scale_11_21.setBitmap(touchgfx::Bitmap(BITMAP_SCALES_11_21_ID));
    scales.add(scale_11_21);

    scale_9_17.setXY(0, 0);
    scale_9_17.setVisible(false);
    scale_9_17.setBitmap(touchgfx::Bitmap(BITMAP_SCALE_9_17_ID));
    scales.add(scale_9_17);

    scale_6_11.setXY(0, 0);
    scale_6_11.setBitmap(touchgfx::Bitmap(BITMAP_SCALES_6_11_ID));
    scales.add(scale_6_11);

    gauge_peak.setPosition(20, 18, 114, 114);
    gauge_peak.setCenter(57, 57);
    gauge_peak.setStartEndAngle(0, 270);
    gauge_peak.setRange(0, 100);
    gauge_peak.setValue(0);
    gauge_peak.setEasingEquation(touchgfx::EasingEquations::quadEaseInOut);
    gauge_peak.setNeedle(BITMAP_ARROW_PEAK_ID, 1, 0);
    gauge_peak.setMovingNeedleRenderingAlgorithm(touchgfx::TextureMapper::BILINEAR_INTERPOLATION);
    gauge_peak.setSteadyNeedleRenderingAlgorithm(touchgfx::TextureMapper::BILINEAR_INTERPOLATION);

    gauge_value.setPosition(20, 18, 114, 114);
    gauge_value.setCenter(57, 57);
    gauge_value.setStartEndAngle(0, 270);
    gauge_value.setRange(0, 100);
    gauge_value.setValue(0);
    gauge_value.setEasingEquation(touchgfx::EasingEquations::quadEaseInOut);
    gauge_value.setNeedle(BITMAP_ARROW_ID, 1, 0);
    gauge_value.setMovingNeedleRenderingAlgorithm(touchgfx::TextureMapper::BILINEAR_INTERPOLATION);
    gauge_value.setSteadyNeedleRenderingAlgorithm(touchgfx::TextureMapper::BILINEAR_INTERPOLATION);

    peak_caption.setXY(90, 125);
    peak_caption.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    peak_caption.setLinespacing(0);
    peak_caption.setTypedText(touchgfx::TypedText(T_PEAK));

    peak_value.setPosition(91, 111, 43, 15);
    peak_value.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    peak_value.setLinespacing(0);
    Unicode::snprintf(peak_valueBuffer, PEAK_VALUE_SIZE, "%s", touchgfx::TypedText(T_PEAK_VAL).getText());
    peak_value.setWildcard(peak_valueBuffer);
    peak_value.setTypedText(touchgfx::TypedText(T___SINGLEUSE_3SAG));

    icon_boost.setXY(95, 82);
    icon_boost.setBitmap(touchgfx::Bitmap(BITMAP_TURBO_ICON_ID));

    values.setPosition(0, 0, 160, 173);

    values_6_11.setPosition(0, 0, 160, 173);

    value_6_11_5.setPosition(117, 20, 43, 15);
    value_6_11_5.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    value_6_11_5.setLinespacing(0);
    Unicode::snprintf(value_6_11_5Buffer, VALUE_6_11_5_SIZE, "%s", touchgfx::TypedText(T_SCALE_VAL).getText());
    value_6_11_5.setWildcard(value_6_11_5Buffer);
    value_6_11_5.setTypedText(touchgfx::TypedText(T___SINGLEUSE_Y1Y9));
    values_6_11.add(value_6_11_5);

    value_6_11_4.setPosition(55, 1, 43, 15);
    value_6_11_4.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    value_6_11_4.setLinespacing(0);
    Unicode::snprintf(value_6_11_4Buffer, VALUE_6_11_4_SIZE, "%s", touchgfx::TypedText(T_SCALE_VAL).getText());
    value_6_11_4.setWildcard(value_6_11_4Buffer);
    value_6_11_4.setTypedText(touchgfx::TypedText(T___SINGLEUSE_8EJH));
    values_6_11.add(value_6_11_4);

    value_6_11_3.setPosition(-10, 20, 43, 15);
    value_6_11_3.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    value_6_11_3.setLinespacing(0);
    Unicode::snprintf(value_6_11_3Buffer, VALUE_6_11_3_SIZE, "%s", touchgfx::TypedText(T_SCALE_VAL).getText());
    value_6_11_3.setWildcard(value_6_11_3Buffer);
    value_6_11_3.setTypedText(touchgfx::TypedText(T___SINGLEUSE_595N));
    values_6_11.add(value_6_11_3);

    value_6_11_2.setPosition(-27, 67, 43, 15);
    value_6_11_2.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    value_6_11_2.setLinespacing(0);
    Unicode::snprintf(value_6_11_2Buffer, VALUE_6_11_2_SIZE, "%s", touchgfx::TypedText(T_SCALE_VAL).getText());
    value_6_11_2.setWildcard(value_6_11_2Buffer);
    value_6_11_2.setTypedText(touchgfx::TypedText(T___SINGLEUSE_7E1I));
    values_6_11.add(value_6_11_2);

    value_6_11_1.setPosition(-10, 114, 43, 15);
    value_6_11_1.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    value_6_11_1.setLinespacing(0);
    Unicode::snprintf(value_6_11_1Buffer, VALUE_6_11_1_SIZE, "%s", touchgfx::TypedText(T_SCALE_VAL).getText());
    value_6_11_1.setWildcard(value_6_11_1Buffer);
    value_6_11_1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_M1TV));
    values_6_11.add(value_6_11_1);

    value_6_11_0.setPosition(38, 134, 43, 15);
    value_6_11_0.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    value_6_11_0.setLinespacing(0);
    Unicode::snprintf(value_6_11_0Buffer, VALUE_6_11_0_SIZE, "%s", touchgfx::TypedText(T_SCALE_VAL).getText());
    value_6_11_0.setWildcard(value_6_11_0Buffer);
    value_6_11_0.setTypedText(touchgfx::TypedText(T___SINGLEUSE_WX44));
    values_6_11.add(value_6_11_0);
    values.add(values_6_11);

    units_label.setPosition(4, 145, 77, 15);
    units_label.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    units_label.setLinespacing(0);
    Unicode::snprintf(units_labelBuffer, UNITS_LABEL_SIZE, "%s", touchgfx::TypedText(T_UNITS_LABEL).getText());
    units_label.setWildcard(units_labelBuffer);
    units_label.setTypedText(touchgfx::TypedText(T___SINGLEUSE_P8PJ));

    add(gauge_arc);
    add(bg);
    add(scales);
    add(gauge_peak);
    add(gauge_value);
    add(peak_caption);
    add(peak_value);
    add(icon_boost);
    add(values);
    add(units_label);
}

void SingleGaugeBase::initialize()
{

}

