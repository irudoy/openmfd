/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#include <gui_generated/graphscreen_screen/GraphScreenViewBase.hpp>
#include <touchgfx/Color.hpp>
#include <touchgfx/canvas_widget_renderer/CanvasWidgetRenderer.hpp>


GraphScreenViewBase::GraphScreenViewBase()
{

    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);

    __background.setPosition(0, 0, 320, 240);
    __background.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));

    bg.setPosition(0, 0, 320, 240);
    bg.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));

    gauge1.setXY(163, 42);

    graph1.setXY(-1, 18);

    add(__background);
    add(bg);
    add(gauge1);
    add(graph1);
}

void GraphScreenViewBase::setupScreen()
{
    gauge1.initialize();
    graph1.initialize();
}

//Handles when a key is pressed
void GraphScreenViewBase::handleKeyEvent(uint8_t key)
{
    if(0 == key)
    {
        //PrevScreen
        //When hardware button 0 clicked change screen to TwinsScreen
        //Go to TwinsScreen with no screen transition
        application().gotoTwinsScreenScreenNoTransition();
    }
    if(1 == key)
    {
        //NextScreen
        //When hardware button 1 clicked change screen to Test
        //Go to Test with no screen transition
        application().gotoTestScreenNoTransition();
    }
}
